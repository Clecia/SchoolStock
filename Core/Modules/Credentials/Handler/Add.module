<?php
/**
 * Created by MarxMedia.
 * Author: Kevin Marques
 * Date: 08/07/2018 - 19:49
 * Grh : AddCredential.moduleodule
 */

namespace Modules\Application\Credentials\Manager;

use Modules\Auth;
use Modules\CNN;
use Modules\System;

class Add
{
    private $sql;
    private $accessToken;

    public function setAccessToken($accessToken) { $this->accessToken = $accessToken; }
    private function getAccessToken() { return $this->accessToken; }
    private function getSql() { return $this->sql; }
    public function __construct() {
        $this->sql = CNN::getSql();
    }
    public function init(){
        if(empty($_POST['username']) || empty($_POST['usergroup']) || $_POST['username'] == 'none'|| $_POST['usergroup'] == 'none'){
            System::message('error',_tr('credentials'),_tr('all_credential_fields_need_to_be_filled'));
        }
        else if($this->getAccessToken() != System::getAccessToken()){
            System::message('error',_tr('credentials'),_tr('access_token_receive_is_wrong').$this->getAccessToken());
        }
        else{
            //Cria uma verificação de grupo de usuário para verificar duplicidade de nome
            $getData = $this->getSql()->query("SELECT * FROM ".__CREDENTIALS);
            $fetch = $getData->fetchAll(\PDO::FETCH_ASSOC);
            //Variável de entrada, Combina o authid + guid, gerando um CI, ao qual é comparado verificando ambiguidade
            $checkComboIn = $_POST['username'].$_POST['usergroup'];
            $alreadyNameExist = false;
            $cidCopied = null;
            $alreadyAuthidExist = false;
            foreach ($fetch as $eachName) {
                $eaToCheck = $eachName['cid'];
                if($checkComboIn == $eaToCheck){
                    $cidCopied =$eaToCheck;
                    $alreadyNameExist = true;
                    break;
                }
                if($eachName['authid'] == $_POST['username']){
                    $alreadyAuthidExist =true;
                    break;
                }
            }
            //Sub verificações
            if($alreadyNameExist){
                System::message('warning',_tr('credentials'),sprintf(_tr('credential_combo_already_exist'),$cidCopied));
            }
            else if($alreadyAuthidExist){
                System::message('info',_tr('credentials'),_tr('this_user_already_is_credited'));
            }

            else{
                $cid = $_POST['username'].$_POST['usergroup'];
                //----
                $addGroup = $this->getSql()->prepare("INSERT INTO ".__CREDENTIALS." (cid, guid,authid) 
                VALUES (:cid, :guid, :authid)");
                $addGroup->bindValue(":cid",$cid);
                $addGroup->bindValue(":guid",$_POST['usergroup']);
                $addGroup->bindValue(":authid",$_POST['username']);
                $result = $addGroup->execute();

                if ($result){
                    System::message("success",_tr('credentials'),_tr('successfully_credential_added'));
                }
                else{
                    System::message("error",_tr('credentials'),_tr('error_on_add_credential'));
                }
            }
        }
    }
}