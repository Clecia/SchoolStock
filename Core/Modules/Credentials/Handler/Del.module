<?php
/**
 * Created by MarxMedia.
 * Author: Kevin Marques
 * Date: 14/07/2018 - 19:04
 * Grh : DelGroup.module
 */

namespace Modules\Application\Credentials\Manager;


use Interfaces\ThrowableAll;
use Modules\CNN;
use Modules\System;

class Del
{
    private $accessToken;
    private $cidToRemove;
    private $sql;
    private $moduleName;

    public function setModuleName($moduleName) { $this->moduleName = $moduleName; }

    public function getModuleName() { return $this->moduleName; }
    public function setAccessToken($accessToken) { $this->accessToken = $accessToken; }
    public function setCidToRemove($cidToRemove) { $this->cidToRemove = $cidToRemove; }
    private function getCidToRemove() { return $this->cidToRemove; }
    private function getAccessToken() { return $this->accessToken; }

    public function getSql(): \PDO { return $this->sql; }
    public function __construct() {
        $this->sql= CNN::getSql();
    }
    public function remove(){
        try{
            if(null == $this->getCidToRemove()){
                System::message('error',_tr('remove_credential'),_tr('cid_not_found'));
            }
            else if(System::getAccessToken() != $this->getAccessToken()){
                System::message('error',_tr('remove_credential'),_tr('access_token_receive_is_wrong'));
            }
            else{
                !defined("_AUTHID") ? define("_AUTHID",$_SESSION['authid']) : null;
                $getCover = $this->getSql()->prepare("SELECT * FROM see_credentials WHERE cid=?");
                $getCover->bindValue(1,$this->getCidToRemove());
                $getCover->execute();
                $fetchCover = $getCover->fetch(\PDO::FETCH_ASSOC);
                if($getCover->rowCount() == 0){
                    System::message('error',_tr('remove_credential'),_tr('cid_not_registered'));
                }
                else if($fetchCover['authid'] == _AUTHID){
                    System::message('error',_tr('remove_credential'),_tr('you_cannot_remove_credential_that_you_are_using'));
                }
                else{
                    $remove = $this->getSql()->prepare("DELETE FROM ".__CREDENTIALS." WHERE cid=?");
                    $remove->bindValue(1,$this->getCidToRemove());
                    $remove->execute();

                    if($remove){
                        System::message('success',_tr('remove_credential'),_tr('credential_successfully_removed'),System::goTo(WWW_PATH.$this->getModuleName(),1));
                    }
                    else{
                        System::message('warning',_tr('remove_credential'),_tr('impossible_to_remove_credential'));
                    }
                }
            }
        }
        catch (ThrowableAll $e){
            System::message('error',_tr('internal_error'),$e->getMessage());
        }
    }
}